{"ast":null,"code":"var _jsxFileName = \"/Users/wgjamia/TypeScript-Training/twakite-salha/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Memoized fetchWeather function\n  const fetchWeather = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m&current_weather=true`);\n      const data = await response.json();\n      setTemperature(data.hourly.temperature_2m[0]);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, [latitude, longitude]);\n\n  // UseEffect that depends on fetchWeather\n  useEffect(() => {\n    if (latitude && longitude) {\n      fetchWeather();\n    }\n  }, [latitude, longitude, fetchWeather]);\n  const handleLocationPermission = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      }, error => {\n        alert(\"Location permissions denied!\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CSS_VR_THEMER\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"wt\",\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), !latitude && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLocationPermission,\n      className: \"eaBtn\",\n      children: \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lw\",\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : temperature ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cSalats\",\n      children: [\"Current Temperature: \", temperature, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lw\",\n      children: \"Press \\\"Get Location\\\" to fetch weather.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"kxdr7kdjku5aZ/8gavFLUCgvB+E=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Weather","_s","latitude","setLatitude","longitude","setLongitude","temperature","setTemperature","loading","setLoading","fetchWeather","response","fetch","data","json","hourly","temperature_2m","error","console","handleLocationPermission","navigator","geolocation","getCurrentPosition","position","coords","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wgjamia/TypeScript-Training/twakite-salha/src/components/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nconst Weather = () => {\n    const [latitude, setLatitude] = useState(null);\n    const [longitude, setLongitude] = useState(null);\n    const [temperature, setTemperature] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    // Memoized fetchWeather function\n    const fetchWeather = useCallback(async () => {\n        setLoading(true);\n        try {\n            const response = await fetch(\n                `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m&current_weather=true`\n            );\n            const data = await response.json();\n            setTemperature(data.hourly.temperature_2m[0]);\n        } catch (error) {\n            console.error(\"Error fetching weather data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }, [latitude, longitude]);\n\n    // UseEffect that depends on fetchWeather\n    useEffect(() => {\n        if (latitude && longitude) {\n            fetchWeather();\n        }\n    }, [latitude, longitude, fetchWeather]);\n\n    const handleLocationPermission = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    setLatitude(position.coords.latitude);\n                    setLongitude(position.coords.longitude);\n                },\n                (error) => {\n                    alert(\"Location permissions denied!\");\n                }\n            );\n        } else {\n            alert(\"Geolocation is not supported by your browser!\");\n        }\n    };\n\n    return (\n        <div className=\"CSS_VR_THEMER\">\n            <h2 className=\"wt\">Weather Information</h2>\n            {!latitude && (\n                <button onClick={handleLocationPermission} className=\"eaBtn\">\n                    Get Location\n                </button>\n            )}\n\n            {loading ? (\n                <p className=\"lw\">Loading weather...</p>\n            ) : temperature ? (\n                <p className=\"cSalats\">Current Temperature: {temperature}Â°C</p>\n            ) : (\n                <p className=\"lw\">Press \"Get Location\" to fetch weather.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}